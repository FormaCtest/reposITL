{"version":3,"file":"index.a4b94d38.js","sources":["../../../../components/UI/selecter_univ.vue","../../../../pages/[name].itl.wiki/setting/general/index.vue"],"sourcesContent":["<template>\r\n    <div>\r\n     <!-- <div @click=\"show_select()\" :style=\"[{top: top+'px'},{width: width+'px'},{left: left+'px'}]\" class=\"title_selected\">{{ dataSelect[0] }}<img src=\"@/assets/resourses/icons/ic.png\"></div>  Видимая часть списка -->\r\n     <div class=\"bg\">\r\n     <div><input type=\"text\" :style=\"[{top: top+'px'},{width: width+'px'},{left: left+'px'}]\" class=\"title_selected\" v-bind:value=\"dataSelect[0]\" readonly ></div>\r\n     <div class=\"show_selected\" :style=\"[{top: top+30+'px'},{width: width+50+'px'},{left: left+'px'}]\" v-for=\"list of dataSelect\">\r\n        <span @click=\"theChosenOne(this.dataSelect.indexOf(list))\" :class=\"{'activeT': (chosen===this.dataSelect.indexOf(list))}\">{{list}}</span>\r\n                                          \r\n    </div>\r\n</div>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default{\r\n    props:{\r\n        top:{\r\n            type: Number    //позиция по вертикали\r\n        },\r\n        width:{ \r\n            type: Number    //ширина выпадающего списка\r\n        },\r\n        left:{\r\n            type: Number    // позиция по горизонтали\r\n        },\r\n        dataSelect:{ \r\n            type: Array      //элементы на выбор из выпадающего списка\r\n        },\r\n     \r\n    },\r\n    data(){\r\n        return{\r\n            show: false,\r\n            chosen: 0\r\n        }\r\n    },\r\n    methods:{\r\n        theChosenOne(id) {\r\n         this.chosen=id\r\n         this.$emit('chosen', this.chosen)\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style lang=\"scss\" scored>\r\n@import \"@/assets/scss/font_family.scss\";\r\n.bg:not(:hover){\r\n.show_selected{\r\n    pointer-events: none;  //разрешается взаимодействие пользователя с инпутом\r\n}\r\n}\r\n.bg:focus-within{\r\n.show_selected{\r\n    opacity: 1;\r\n    pointer-events: auto;  //разрешается взаимодействие пользователя с инпутом\r\n}\r\n}\r\n.activeT{\r\n    color: #1402b6;\r\n}\r\n.title_selected{\r\n    cursor: pointer;\r\n    font-family: 'Roboto_regular';\r\n    font-size: 16px;\r\n    position: absolute;\r\n    color: rgb(53, 53, 53);\r\n    background-color: white;\r\n    border: 0px;\r\n    border-bottom: 1px solid rgb(218, 218, 218);\r\n    padding-bottom: 10px;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    display: flex;\r\n    outline:none;  //отсутвие линии выделения инпута\r\n    justify-content: space-between;\r\n    background: url(\"@/assets/resourses/icons/ic.png\") no-repeat 95% 40%;\r\n    &:focus{\r\n        border-bottom: 1px solid rgb(218, 218, 218);\r\n    }\r\n}\r\n    .show_selected{\r\n        position: absolute;\r\n        background-color:rgb(255, 255, 255);\r\n        display: flex;\r\n        flex-direction: column;\r\n        cursor: pointer;\r\n        padding-bottom: 20px;\r\n        padding-top: 20px;\r\n        padding-left: 10px;\r\n        padding-right: 10px;\r\n        font-family: 'Roboto_regular';\r\n        box-shadow: 1px 1px 10px 1px rgb(214, 214, 214);\r\n        color: rgb(53, 53, 53);\r\n        opacity: 0;\r\n       \r\n    }\r\n</style>","<template>\r\n    <div>\r\n      <div class=\"containerZ\">\r\n      <div class=\"sot\"><p href='#'>Настройки /</p><p href='#'> Общие</p></div> \r\n      <div class=\"add_s\"><span >Профиль компании</span></div>\r\n      <inputMail :start=\"teams.session_TeamName\" @create=\"savename\" :error=\"error\" :update=\"update\" :top=\"80\" :left=\"430\" :width=\"430\" :placeholder=\"'Название вашей компании'\"/>\r\n      <inputMail :start=\"teams.session_TeamCode\" :analys=\"true\" @create=\"savecode\" :error=\"error||error_code\" :update=\"update\" :top=\"170\" :left=\"430\" :message=\"message\" @input=\"origi()\" :placeholder=\"'адрес сайта'\"/>\r\n      <div class=\"itl\"><p>itl.wiki</p><div ><img @click=\"help\" :class=\"{'que':que}\" src=\"@/assets/resourses/icons/support_2.png\"></div></div>\r\n      <help_window :class=\"[{'activE':visible},{'dis':true}]\" :style=\"[{top:'270px'},{left:'830px'}]\"/>\r\n      <div class=\"pod_text\">Поделитесь ссылкой <span class=\"pod_link\">itl.wiki/{{ teams.session_TeamCode }}</span>, \r\n        чтобы добавить кого-либо с разрешенным доменом электронной почты\r\n         в ваше рабочее пространство.</div>\r\n         <div class=\"add_s\" :style=\"[{top: '400px'}, {color: '#999999'}]\"><span >Разрешеные почтовые домены</span><div>Скоро</div></div>\r\n         <div class=\"fake_input\">Введите домены через запятую или пробел</div>\r\n         <span class=\"sot\" :style=\"[{top: '550px'},{width: '460px'}]\">Любой, кто имеет адрес электронной почты в этих доменах,\r\n           может автоматически присоединиться к вашей компании.</span>\r\n           <div class=\"add_s\" :style=\"[{top: '630px'},{color: 'rgb(46, 46, 46)'}]\"><span >Региональные настройки</span></div>\r\n           <div class=\"lang\"><span class=\"text_lang\">Язык интерфейса</span></div>\r\n           <div class=\"data\"><span class=\"text_data\">Формат даты</span></div>\r\n           <button  @click=\"SaveEdit()\" class=\"button create_text\" :style=\"[{top: '830px'},{left: '430px'}]\" :disabled=\"disabled\">Сохранить настройки</button>\r\n           <Selecter_univ @chosen=\"jjj\" :width=\"300\" :dataSelect=\"dataSelect1\" :top=\"760\" :left=\"630\"/>\r\n           <Selecter_univ @chosen=\"jjj\" :width=\"300\" :dataSelect=\"dataSelect2\" :top=\"690\" :left=\"630\"/>\r\n           \r\n           \r\n     </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport Selecter_univ from '~~/components/UI/selecter_univ.vue';\r\nimport Select_status from '~~/components/UI/select_status.vue';\r\nimport { useTeamsStore } from '~~/stores/Teams';\r\nimport { useThePrivateStore } from '~~/stores/private';\r\ndefinePageMeta ({\r\n  layout: \"company\",\r\n  middleware: ['auth', 'team'],\r\n})\r\nexport default {\r\n    setup() {\r\n        const teams = useTeamsStore();\r\n        const priv = useThePrivateStore()\r\n        return { teams, priv };\r\n    },\r\n    mounted(){\r\n     this.InfoTeams()\r\n    },\r\n    data() {\r\n        return {\r\n            que: false,\r\n            visible: false,\r\n            dataSelect1:['День месяц'],\r\n            dataSelect2:['Русский'],\r\n            company_data: [],\r\n            code: '',\r\n            name: '',\r\n            error: false,\r\n            update: false,\r\n            error_code: false,\r\n            message: 'неккоректно введенные данные',\r\n            disabled: false\r\n        };\r\n    },\r\n    methods: {\r\n     async origi(){\r\n        const url = new URL(\r\n    \"https://api.wiki.itl.systems/team/code/check\"\r\n);\r\n\r\nconst headers = {\r\n    \"Authorization\": \"Bearer \"+this.priv.token,\r\n    \"Content-Type\": \"application/json\",\r\n    \"Accept\": \"application/json\",\r\n};\r\n\r\nlet body = {\r\n    \"code\": this.code,\r\n    \"team_id\": this.teams.session_TeamID\r\n};\r\n\r\nconst {data, error} = await useFetch(url, {\r\n    method: \"POST\",\r\n    headers,\r\n    body: JSON.stringify(body),\r\n})\r\nif (!data.value){\r\n  this.message= error._rawValue.data.messages.code[0]\r\n  this.error_code=true\r\n  this.disabled=true\r\n  \r\n}else{\r\n  this.error_code = false\r\n  this.message= 'неккоректно введенные данные'\r\n  this.disabled=false\r\n}\r\n      },\r\n      savename(p){\r\n        this.name=p\r\n        this.error=false\r\n      },\r\n      savecode(p){\r\n        this.code=p\r\n        this.error=false\r\n      },\r\n      async SaveEdit() {\r\n        const url = new URL(\r\n    \"https://api.wiki.itl.systems/team/edit\"\r\n);\r\n\r\nconst headers = {\r\n    \"Authorization\": \"Bearer \"+this.priv.token,\r\n    \"Content-Type\": \"application/json\",\r\n    \"Accept\": \"application/json\",\r\n};\r\n\r\nlet body = {\r\n    \"team_id\": this.teams.session_TeamID,\r\n    \"name\": this.name,\r\n    \"code\": this.code\r\n};\r\n\r\nconst {error}  = await useFetch(url, {\r\n    method: \"POST\",\r\n    headers,\r\n    body: JSON.stringify(body),\r\n})\r\nif (error.value===null){\r\nthis.update=true\r\nsetTimeout(()=>{this.update=false}, 500)\r\n}else{\r\n  switch (error.value.statusCode) {\r\n    case 401: throw createError({ statusCode: 401, statusMessage: 'the session is over', fatal: true })\r\n    break;\r\n    case 500: throw createError({ statusCode: 500, statusMessage: 'invalid request', fatal: true })\r\n    break;\r\n    case 400: throw createError({ statusCode: 400, statusMessage: 'Запросу не хватает данных'})\r\n    break;\r\n    case 429: this.priv.Delete_token;\r\n              throw createError({ statusCode: 400, statusMessage: 'Слишком много запросов', fatal: true})\r\n              break;\r\n}\r\n}\r\n      },\r\n        async InfoTeams(){\r\n          const url = new URL(\r\n    \"https://api.wiki.itl.systems/team\"\r\n);\r\n\r\nconst params = {\r\n    \"team_id\": this.teams.session_TeamID,\r\n};\r\nObject.keys(params)\r\n    .forEach(key => url.searchParams.append(key, params[key]));\r\n\r\nconst headers = {\r\n    \"Authorization\": \"Bearer \"+this.priv.token,\r\n    \"Content-Type\": \"application/json\",\r\n    \"Accept\": \"application/json\",\r\n};\r\n\r\n\r\nconst {data, error} = await useFetch(url, {\r\n    method: \"GET\",\r\n    headers,\r\n})\r\nif(data.value){\r\nthis.company_data=data.value.data.team\r\n}else{\r\n  switch (error.value.statusCode) {\r\n    case 401: throw createError({ statusCode: 401, statusMessage: 'the session is over', fatal: true })\r\n    break;\r\n    case 500: throw createError({ statusCode: 500, statusMessage: 'invalid request', fatal: true })\r\n    break;\r\n    case 400: throw createError({ statusCode: 400, statusMessage: 'Запросу не хватает данных'})\r\n    break;\r\n    case 429: this.priv.Delete_token;\r\n              throw createError({ statusCode: 400, statusMessage: 'Слишком много запросов', fatal: true})\r\n              break;\r\n}\r\n}\r\n        },\r\n        jjj(p){\r\n  \r\n        },\r\n        help() {\r\n            this.visible = true;\r\n            this.que = true;\r\n            setTimeout(() => this.dishelp(), 4000);\r\n        },\r\n        dishelp() { \r\n            this.visible = false;\r\n            this.que = false;\r\n        },\r\n    },\r\n    components: { Select_status, Selecter_univ }\r\n}\r\n</script>\r\n<style lang=\"scss\" scored>\r\n@import \"@/assets/scss/button.scss\";\r\n @import \"@/assets/scss/style.scss\";\r\n@import \"@/assets/scss/font_family.scss\";\r\n.containerZ{\r\n  padding: 0px;\r\n  margin: 0px;\r\n  width: 100%;\r\n  height: 920px;\r\n}\r\n.lang{\r\nposition: absolute;\r\nheight: 60px;\r\nwidth: 700px;\r\nleft: 430px;\r\ntop: 700px;\r\nfont-size: 16px;\r\nfont-family: 'Roboto_regular';\r\n}\r\n.data{\r\n  position: absolute;\r\n  left: 430px;\r\n  top: 770px;\r\n  font-size: 16px;\r\n  font-family: 'Roboto_regular';\r\n}\r\n.fake_input{\r\n  position: absolute;\r\n  left: 430px;\r\n  top: 470px;\r\n  width: 450px;\r\n  height: 40px;\r\n  border-bottom: 1px solid #999999;\r\n  font-family: 'Roboto_light';\r\n  padding-bottom: 0px;\r\n  color: #999999;\r\n  font-size: 16px;\r\n\r\n}\r\n.pod_text{\r\nposition: absolute;\r\nwidth: 470px;\r\nheight: 50px;;\r\nleft: 430px;\r\ntop: 300px;\r\ncolor: rgb(85, 85, 85);\r\nfont-family: 'Roboto_regular';\r\nfont-size: 13px;\r\nline-height: 1.5;\r\n.pod_link{\r\n  color: rgb(0, 0, 168);\r\n}\r\n}\r\n.link{\r\n  position: absolute;\r\n  left: 825px;\r\n  top:235px;\r\n  font-family: 'Roboto_regular';\r\n  font-size: 16px;\r\n  color: rgb(46, 46, 46)\r\n}\r\n.itl{\r\n    margin: 0;\r\n    padding: 0;\r\n    display: flex;\r\n    flex-wrap: nowrap;\r\n    justify-content: space-between;\r\n    position: absolute;\r\n    width: 69px;\r\n    height: 168px;\r\n    left: 830px;\r\n    top: 220px;\r\n  \r\n    img{\r\n        position: absolute;\r\n        top:18px;\r\n        opacity: 0.5;\r\n        transition: 0.09s;\r\n    }\r\n    img:hover{\r\n        opacity: 1;\r\n        cursor: pointer;}\r\n    .que{\r\n  opacity:1\r\n }\r\n    p{\r\n        font-size: 19px;\r\n        color: rgb(54, 54, 54);\r\n        font-family: 'NS_Medium'\r\n    }\r\n }\r\n.add_s{\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  justify-content: space-between;\r\nposition: absolute;\r\nwidth: 365px;\r\nleft: 430px;\r\ntop: 90px;\r\nfont-family: \"Roboto_regular\";\r\nfont-size: 20px;\r\ndiv{\r\n  padding-top: 5px;\r\n  background-color: #eef4fd;\r\n  color: black;\r\n  font-size: 12px;\r\n  width: 50px;\r\n  height: 20px;\r\n  text-align: center;\r\n}\r\n}\r\n.sot{\r\n    display: flex;\r\n    flex-wrap: nowrap;\r\n    position: absolute;\r\n    line-height: 1.5;\r\n    width: 400px;\r\n    height: 20px;\r\n    left: 430px;\r\n    top: 30px;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    font-family: \"Roboto_regular\";\r\n    font-size: 13px;\r\n    color: #999999;\r\n    p:hover{\r\n        text-decoration: underline;\r\n    }\r\n}\r\n.dis {\r\n    opacity: 0;\r\n    transition: 0.5s;\r\n  }\r\n .activE{\r\n  opacity: 1;\r\n}\r\n</style>"],"names":["_sfc_main","id","_hoisted_1","_createElementBlock","_createElementVNode","_normalizeStyle","$props","_Fragment","_renderList","list","$options","$data","_hoisted_3","teams","priv","url","headers","body","data","error","useFetch","createError","params","p","Select_status","Selecter_univ","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_9","_hoisted_11","_cache","$event","args","_normalizeClass","_imports_0","_toDisplayString","$setup"],"mappings":"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"}