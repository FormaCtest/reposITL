{"version":3,"file":"index.708ca14f.js","sources":["../../../../pages/[name].itl.wiki/my_works/[id_article]/index.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div v-if=\"article_data.info_public\"> \r\n    <div @click=\"navigateTo('/'+this.teams.session_TeamCode+'.itl.wiki/my_works/'+article.article_id+'/edit')\" class=\"pencil\"><img src=\"@/assets/resourses/icons/pencil.png\">Правка</div>\r\n    <ChangingAccess  :text=\"'у всех'\" @For_whom=\"edit_role\" :type_entity=\"2\" :id_entity=\"article.article_id\" @click=\"chain=false\" :left=\"1200\" :top=\"42\"/>\r\n      <div class=\"HelOu\">{{article_data.info_public.article.name+'/'+'Первичная информация'}}</div>  \r\n      <div class=\"heeead\">{{ article_data.info_public.article.name }}\r\n        <div v-if=\"article_data.info_public.article.status_id<3\" class=\"status\">\r\n          {{ article_data.info_public.article.status_id===1?'черновик':'на модерации' }}\r\n            </div>\r\n      </div>\r\n      <div class=\"description\">\r\n        <div class=\"postDes\">\r\n          Автор:&nbsp;<div class=\"meaning\">{{ article_data.info_public.article.creator.fullname }}</div>&nbsp;\r\n        </div>\r\n        <div class=\"postDes\">\r\n          &nbsp;Обновлено:&nbsp; <div class=\"meaning\">{{ import_data(article_data.info_public.article.updated_at)  }}</div>\r\n        </div> \r\n      </div>\r\n    </div>\r\n    <div id=\"editorjss\" v-show=\"article_data.info_public\">\r\n      <div v-if=\"editor_obj.blocks\">\r\n        <span>{{ editor_obj }}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { useThePrivateStore } from '~~/stores/private';\r\nimport { useTeamsStore } from '~~/stores/Teams';\r\nimport { useArticleStore } from '~~/stores/ArticleStore';\r\nimport EditorJs from '@editorjs/editorjs'\r\n import Header from '@editorjs/header'; \r\n import List from '@editorjs/list';\r\n import ImageTool from '@editorjs/image';\r\n import Table from '@editorjs/table';\r\n import Quote from '@editorjs/quote';\r\n import CodeTool from '@editorjs/code';\r\n import Delimiter from '@editorjs/delimiter';\r\n import RawTool from '@editorjs/raw';\r\n import Warning from '@editorjs/warning';\r\n import Checklist from '@editorjs/checklist';\r\ndefinePageMeta ({\r\nlayout: \"company\",\r\nmiddleware: ['auth', 'team'],\r\n})\r\nexport default{\r\nsetup(){\r\n\r\n  const priv = useThePrivateStore()\r\n  const teams = useTeamsStore()\r\n  const article = useArticleStore()\r\n  const  editor = new EditorJs({\r\n    tools: { \r\n    header: {\r\n      class: Header, \r\n      inlineToolbar: ['link'],\r\n    }, \r\n    list: { \r\n      class: List, \r\n      inlineToolbar: true \r\n    },\r\n    image: {\r\n        class: ImageTool\r\n    },\r\n    quote: {\r\n        class: Quote\r\n    },\r\n    code: {\r\n        class: CodeTool\r\n    },\r\n    delimiter: {\r\n        class: Delimiter\r\n    },\r\n    raw: {\r\n        class: RawTool\r\n    },\r\n    table: {\r\n         class: Table\r\n    },\r\n    warning: {\r\n        class: Warning\r\n    },\r\n    checklist: {\r\n        class: Checklist\r\n    },\r\n},\r\n    readOnly: true,\r\n    holder: 'editorjss', \r\n    onReady: ()=>{\r\n        import_edit()\r\n   \r\n},\r\nonChange:() =>{\r\n    \r\n}\r\n})\r\nasync function import_edit(){\r\n        const url = new URL(\r\n          \"https://api.wiki.itl.systems/team/article/edit\"\r\n);\r\n\r\nconst params = {\r\n    \"team_id\": teams.session_TeamID,\r\n    \"article_id\": article.article_id\r\n};\r\nObject.keys(params)\r\n    .forEach(key => url.searchParams.append(key, params[key]));\r\n \r\nconst headers = {\r\n    \"Authorization\": \"Bearer \"+priv.token,\r\n    \"Content-Type\": \"application/json\",\r\n    \"Accept\": \"application/json\",\r\n};\r\n\r\n\r\nawait useFetch(url, {\r\n    method: \"GET\",\r\n    headers,\r\n}).then(r=>decode_edit(r.data.value.data.article.tabs))\r\n    }\r\nfunction decode_edit(data){   //декодирует для вывода\r\n  var ready_made_content = []\r\n  //разделитель свойств первого уровня: /&23948\r\n    //разделитель свойств второго уровня /&22903\r\n    //разделитель значений: /&92834\r\n    var one_lvl = '/&23948'\r\n    var two_lvl = '/&22903'\r\n    var split_text = '/&92834' \r\n    for (let i = 0; i<=data.length-1; i++){\r\n        switch (data[i].type) {     \r\n        case 'paragraph' :\r\n        ready_made_content.push( { \"id\": data[i].id, \"type\": \"paragraph\", \"data\": { \"text\": data[i].content } } )\r\n        break;\r\n        case 'header' : \r\n        var c=data[i].content.split(one_lvl)\r\n        var text = c[0]\r\n        var lvl = c[1]\r\n        ready_made_content.push( { \"id\": data[i].id, \"type\": \"header\", \"data\": { \"text\": text, \"level\": lvl } })\r\n        break;\r\n        case 'list' : \r\n        var c1=data[i].content.split(one_lvl)\r\n        var style = c1[0]\r\n        var items = c1[1].split(split_text)\r\n        ready_made_content.push( { \"id\": data[i].id, \"type\": \"list\", \"data\": { \"style\": style, \"items\": items } } )   \r\n        break;\r\n        case 'quote' :\r\n        var c2=data[i].content.split(one_lvl)\r\n        var text2 = c2[0]\r\n        var caption = c2[1]\r\n        var alignment = c2[2] \r\n        ready_made_content.push( { \"id\": data[i].id, \"type\": \"quote\", \"data\": { \"text\": text2, \"caption\": caption, \"alignment\": alignment } } )    \r\n        break;\r\n        case 'code' :\r\n        ready_made_content.push( { \"id\": data[i].id, \"type\": \"code\", \"data\": { \"code\": data[i].content } } )\r\n        break;\r\n        case 'delimiter':\r\n        ready_made_content.push(  { \"id\": data[i].id, \"type\": \"delimiter\", \"data\": {} })\r\n        break;\r\n        case 'raw':\r\n        ready_made_content.push( { \"id\": data[i].id, \"type\": \"raw\", \"data\": { \"html\": data[i].content } } )\r\n        break;\r\n        case 'table':   \r\n        var c3 = data[i].content.split(one_lvl) \r\n        var line = c3[1].split(two_lvl)\r\n        for (let y = 0; y<=line.length-1; y++){\r\n          line[y]=line[y].split(split_text)\r\n        }\r\n        ready_made_content.push( { \"id\": data[i].id, \"type\": \"table\", \"data\": { \"withHeadings\": c3[0], \"content\": line } } )\r\n        break;\r\n        case 'warning':\r\n          var c4 = data[i].content.split(one_lvl)\r\n        ready_made_content.push( { \"id\": data[i].id, \"type\": \"warning\", \"data\": { \"title\": c4[0], \"message\": c4[1] } } )\r\n        break;\r\n        case 'checklist':     \r\n          var c5 = data[i].content.split(one_lvl)\r\n          var lins = []\r\n          for (let k = 0; k<=c5.length-1; k++){\r\n            let c5_l = c5[k].split(split_text)\r\n            lins.push({\"text\":c5_l[0], \"checked\": c5_l[1]})\r\n\r\n          }\r\n        ready_made_content.push( { \"id\": data[i].id, \"type\": \"checklist\", \"data\": { \"items\": lins } })\r\n        break;\r\n    } \r\n    }\r\n    editor.blocks.render({\"time\" : 1550476186479,\r\n    \"blocks\" : ready_made_content,\r\n    \"version\" : \"2.8.1\"})\r\n}\r\n  return{priv, teams, article, editor}\r\n},\r\ncreated(){\r\nsetTimeout(() => {\r\n  this.info_article()\r\n}, 500); \r\n},\r\ndata(){\r\n  return{\r\n  article_data: [],\r\n  editor_obj: {},\r\n  chain: false\r\n  }\r\n},\r\nmethods:{\r\n  async edit_role(type, userID){\r\n    const url = new URL(\r\n    \"https://api.wiki.itl.systems/team/abilities/edit\"\r\n);\r\n\r\nconst headers = {\r\n    \"Authorization\": \"Bearer \"+this.priv.token,\r\n    \"Content-Type\": \"application/json\",\r\n    \"Accept\": \"application/json\",\r\n};\r\n\r\nlet body = {\r\n    \"team_id\": this.teams.session_TeamID,\r\n    \"entity_type\": 'article',\r\n    \"entity_id\": this.article.article_id,\r\n    \"permission\": type\r\n};\r\nif (typeof(userID)==='object'){\r\n  for (let a =0; a<=userID.length-1; a++){\r\n    body.user_id=userID[a].id\r\n    useFetch(url, {\r\n    method: \"POST\",\r\n    headers,\r\n    body: JSON.stringify(body),\r\n})\r\n  }\r\n}else{\r\n  body.user_id=userID\r\nuseFetch(url, {\r\n    method: \"POST\",\r\n   headers,\r\n   body: JSON.stringify(body),\r\n })\r\n}\r\n\r\n  },\r\n  save(){\r\n  this.editor.save().then((data)=>{\r\n   this.editor_obj.blocks=data.blocks\r\n  })\r\n  },\r\n  async info_article() {\r\n    const url = new URL(\r\n    \"https://api.wiki.itl.systems/team/article/edit\"\r\n);\r\nconst url2 = new URL(\r\n    \"https://api.wiki.itl.systems/team/article\"\r\n);\r\nconst params = {\r\n  \"team_id\" : this.teams.session_TeamID,\r\n  \"article_id\": this.article.article_id\r\n}\r\nObject.keys(params)\r\n    .forEach(key => {url.searchParams.append(key, params[key]); \r\n                     url2.searchParams.append(key, params[key])});\r\nconst headers = {\r\n    \"Authorization\": \"Bearer \"+this.priv.token,\r\n    \"Content-Type\": \"application/json\",\r\n    \"Accept\": \"application/json\",\r\n};\r\n\r\nconst {data: data1} = await useFetch(url, {\r\n    method: \"GET\",\r\n    headers,\r\n})\r\nconst {data: data2} = await useFetch(url2, {\r\n    method: \"GET\",\r\n    headers,\r\n})\r\nthis.article_data={info_edit: data1.value.data, info_public: data2.value.data}\r\n  },\r\n  import_data(date){\r\n      var month = ['января','февраля','марта','апреля','мая','июня','июля','августа','сентября','октября','ноября','декабря']\r\n      let dateXXX= new Date(date)\r\n       var dateXXX_text= dateXXX.getDate()+' '+month[dateXXX.getMonth()]+\" \"+\r\n      dateXXX.toTimeString().slice(0, 5)\r\n                                 \r\n      return (dateXXX_text)\r\n\r\n  }\r\n}\r\n}\r\n</script>\r\n<style lang=\"scss\" scored>\r\n@import \"@/assets/scss/font_family.scss\";\r\n#editorjss{\r\n  font-family: 'Roboto_regular';\r\n  font-size: 14px;\r\n  position: relative;\r\n  width: 900px;\r\n  left: 390px;\r\n  top: 100px;\r\n  .cdx-block{\r\n  position: relative;\r\n  left: -70px;\r\n}\r\n}\r\n\r\n.HelOu{\r\nposition: relative;\r\nleft: 420px;\r\ntop: 20px;\r\nfont-size: 13px;\r\nmax-width: 400px;\r\ncolor: gray;\r\nfont-family: 'Roboto_regular';\r\ncursor: pointer;\r\n&:hover{\r\n  text-decoration: underline;\r\n}\r\n}\r\n.inside{\r\nposition: relative;\r\ndisplay: flex;\r\nflex-direction: column;\r\nleft: 410px;\r\ntop: 230px;\r\nmargin: 0px;\r\npadding: 0px;\r\nwidth: 880px;\r\nfont-family: 'Roboto_regular';\r\n.items_block{\r\n  display: flex;\r\n  margin: 0px;\r\n  padding: 7px;\r\n  padding-bottom: 10px;\r\n  padding-top: 5px; \r\n  padding-left: 10px;\r\n  width: 100%;\r\n  height: 37px;\r\n  &:hover{\r\n    background-color: rgb(241, 246, 250);\r\n  }\r\n  img.file{\r\n    margin-top: 4px;\r\n    margin-left: 4px;\r\n    margin-right: 30px;\r\n  }\r\n  img.fold{\r\n    margin-right: 20px;\r\n    width: 38px;\r\n    height: 38px;\r\n  }\r\n  .no{\r\n    padding-top: 7px;\r\n    .nm{\r\n      font-size: 15px;\r\n      color: blue;\r\n      cursor: pointer;\r\n    }\r\n    .ob{\r\n      display: flex;\r\n      flex-wrap: nowrap;\r\n      font-size: 13px;\r\n      color: gray;\r\n\r\n      span{\r\n        color: rgb(77, 77, 77);\r\n      }\r\n    }\r\n  }\r\n}\r\n}\r\n.meaning{\r\ncolor:rgb(65, 65, 65);\r\n}\r\n.heeead{\r\n  display: flex;\r\nposition: relative;\r\nleft: 420px;\r\ntop: 60px;\r\nmax-width: 400px;\r\nfont-size: 23px;\r\nfont-family: 'Roboto_regular';\r\n}\r\n.postDes{\r\ndisplay: flex;\r\n}\r\n.description{\r\ndisplay: flex;\r\nflex-wrap: nowrap;\r\nposition: relative;\r\nleft: 420px;\r\ntop: 70px;\r\nmax-width: 400px;\r\nfont-size: 13px;\r\ncolor: gray;\r\nfont-family: 'Roboto_regular';\r\n}\r\n.chain{\r\n&:hover{\r\n  background-color: aliceblue;\r\n}\r\ncursor: pointer;\r\nborder-radius: 2px;\r\nposition: relative;\r\nleft: 1285px;\r\ntop: 35px;\r\nwidth: 35px;\r\nheight: 35px;\r\nimg{\r\n  margin-left: 8px;\r\n  margin-top: 8px;\r\n}\r\n}\r\n.pencil{\r\ndisplay: flex;\r\nfont-family: 'Roboto_regular';\r\nfont-size: 14px;\r\ncursor: pointer;\r\nborder-radius: 2px;\r\nposition: relative;\r\nwidth: 80px;\r\nheight: 30px;\r\nleft: 1140px;\r\nline-height: 2;\r\ntop: 40px;\r\nimg{\r\n  position: relative;\r\n  width: 20px;\r\n  left: -10px;\r\n  top: -5px;\r\nheight: 20px;\r\nmargin-left: 8px;\r\n  margin-top: 8px;\r\n}\r\n}\r\n.section_content{\r\nposition: relative;\r\nwidth: 900px;\r\ntop: 200px;\r\nleft: 413px;\r\nfont-family: 'Roboto_regular';\r\npointer-events: none;\r\np{\r\n  word-break: break-all;\r\n}\r\n}\r\n.status{\r\n    position: relative;\r\n    left: 15px;\r\n    text-align: center;\r\n    line-height: 1.8;\r\n    font-family: 'Roboto_regular';\r\n    padding: 4px;\r\n    color: rgb(48, 48, 48);\r\n    font-size: 12px;\r\n    padding-left: 7px;\r\n    padding-right: 7px;\r\n    padding-bottom: 2px;\r\n    max-width: 100px;\r\n    margin: 0px;\r\n    background-color: aliceblue;\r\n  }\r\n</style>"],"names":["_sfc_main","ImageTool","Delimiter","Checklist","import_edit","url","params","teams","article","headers","priv","useFetch","r","decode_edit","data","one_lvl","two_lvl","i","ready_made_content","c","text","lvl","c1","items","split_text","style","c2","caption","alignment","c3","y","line","c4","c5","lins","k","c5_l","editor","body","type","userID","a","url2","key","data1","data2","date","dateXXX_text","dateXXX","month","_hoisted_3","_hoisted_4","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","$data","$options","_cache","$event","_createElementVNode","_createTextVNode","_toDisplayString","_withDirectives","_vShow"],"mappings":"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"}