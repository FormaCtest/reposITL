{"version":3,"file":"index.b8640bb5.js","sources":["../../../../assets/resourses/icons/circle_ug.png","../../../../pages/[name].itl.wiki/moderation/[id_article]/index.vue"],"sourcesContent":["export default \"__VITE_ASSET__fc68cef1__\"","<template>\r\n    <div>\r\n      <div v-if=\"article_data.info_public\"> \r\n      <div @click=\"navigateTo('/'+this.teams.session_TeamCode+'.itl.wiki/my_works/'+article.article_id+'/edit')\" class=\"kiut\"><img src=\"@/assets/resourses/icons/pencil.png\">Правка</div>\r\n      <ChangingAccess  :text=\"'у всех'\" @For_whom=\"edit_role\" :type_entity=\"2\" :id_entity=\"article.article_id\" @click=\"chain=false\" :left=\"1200\" :top=\"42\"/>\r\n      <div @click=\"publish_art()\" class=\"plio\">\r\n          <img src=\"@/assets/resourses/icons/circle_ug.png\">\r\n          <span>Опубликовать</span>\r\n        </div> \r\n      <div class=\"hillplis\">{{article_data.info_public.article.name+'/'+'Первичная информация'}}</div>  \r\n        <div class=\"difstack\">{{ article_data.info_public.article.name }}\r\n          <div v-if=\"article_data.info_public.article.status_id<3\" class=\"lkj\">\r\n            {{ article_data.info_public.article.status_id===1?'черновик':'на модерации' }}\r\n              </div>\r\n        </div>\r\n        <div class=\"spt\">\r\n          <div class=\"postDes\">\r\n            Автор:&nbsp;<div class=\"meaning\">{{ article_data.info_public.article.creator.fullname }}</div>&nbsp;\r\n          </div>\r\n          <div class=\"postDes\">\r\n            &nbsp;Обновлено:&nbsp; <div class=\"meaning\">{{ import_data(article_data.info_public.article.updated_at)  }}</div>\r\n          </div> \r\n        </div>\r\n      </div>\r\n      <div id=\"editorjsc\" v-show=\"article_data.info_public\">\r\n        <div v-if=\"editor_obj.blocks\">\r\n          <span>{{ editor_obj }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  <script>\r\n  import { useThePrivateStore } from '~~/stores/private';\r\n  import { useTeamsStore } from '~~/stores/Teams';\r\n  import { useArticleStore } from '~~/stores/ArticleStore';\r\n  import { useSectionStore } from '~~/stores/SectionStore';\r\n  import EditorJs from '@editorjs/editorjs'\r\n   import Header from '@editorjs/header'; \r\n   import List from '@editorjs/list';\r\n   import ImageTool from '@editorjs/image';\r\n   import Table from '@editorjs/table';\r\n   import Quote from '@editorjs/quote';\r\n   import CodeTool from '@editorjs/code';\r\n   import Delimiter from '@editorjs/delimiter';\r\n   import RawTool from '@editorjs/raw';\r\n   import Warning from '@editorjs/warning';\r\n   import Checklist from '@editorjs/checklist';\r\n  definePageMeta ({\r\n  layout: \"company\",\r\n  middleware: ['auth', 'team'],\r\n  })\r\n  export default{\r\n  setup(){\r\n  \r\n    const priv = useThePrivateStore()\r\n    const teams = useTeamsStore()\r\n    const article = useArticleStore()\r\n    const sect = useSectionStore()\r\n    const  editor = new EditorJs({\r\n      tools: { \r\n      header: {\r\n        class: Header, \r\n        inlineToolbar: ['link'],\r\n      }, \r\n      list: { \r\n        class: List, \r\n        inlineToolbar: true \r\n      },\r\n      image: {\r\n          class: ImageTool\r\n      },\r\n      quote: {\r\n          class: Quote\r\n      },\r\n      code: {\r\n          class: CodeTool\r\n      },\r\n      delimiter: {\r\n          class: Delimiter\r\n      },\r\n      raw: {\r\n          class: RawTool\r\n      },\r\n      table: {\r\n           class: Table\r\n      },\r\n      warning: {\r\n          class: Warning\r\n      },\r\n      checklist: {\r\n          class: Checklist\r\n      },\r\n  },\r\n      readOnly: true,\r\n      holder: 'editorjsc', \r\n      onReady: ()=>{\r\n          import_edit()\r\n     \r\n  },\r\n  onChange:() =>{\r\n      \r\n  }\r\n  })\r\n  async function import_edit(){\r\n          const url = new URL(\r\n            \"https://api.wiki.itl.systems/team/article/edit\"\r\n  );\r\n  \r\n  const params = {\r\n      \"team_id\": teams.session_TeamID,\r\n      \"article_id\": article.article_id\r\n  };\r\n  Object.keys(params)\r\n      .forEach(key => url.searchParams.append(key, params[key]));\r\n   \r\n  const headers = {\r\n      \"Authorization\": \"Bearer \"+priv.token,\r\n      \"Content-Type\": \"application/json\",\r\n      \"Accept\": \"application/json\",\r\n  };\r\n  \r\n  \r\n  await useFetch(url, {\r\n      method: \"GET\",\r\n      headers,\r\n  }).then(r=>decode_edit(r.data.value.data.article.tabs))\r\n      }\r\n  function decode_edit(data){   //декодирует для вывода\r\n    var ready_made_content = []\r\n    //разделитель свойств первого уровня: /&23948\r\n      //разделитель свойств второго уровня /&22903\r\n      //разделитель значений: /&92834\r\n      var one_lvl = '/&23948'\r\n      var two_lvl = '/&22903'\r\n      var split_text = '/&92834' \r\n      for (let i = 0; i<=data.length-1; i++){\r\n          switch (data[i].type) {     \r\n          case 'paragraph' :\r\n          ready_made_content.push( { \"id\": data[i].id, \"type\": \"paragraph\", \"data\": { \"text\": data[i].content } } )\r\n          break;\r\n          case 'header' : \r\n          var c=data[i].content.split(one_lvl)\r\n          var text = c[0]\r\n          var lvl = c[1]\r\n          ready_made_content.push( { \"id\": data[i].id, \"type\": \"header\", \"data\": { \"text\": text, \"level\": lvl } })\r\n          break;\r\n          case 'list' : \r\n          var c1=data[i].content.split(one_lvl)\r\n          var style = c1[0]\r\n          var items = c1[1].split(split_text)\r\n          ready_made_content.push( { \"id\": data[i].id, \"type\": \"list\", \"data\": { \"style\": style, \"items\": items } } )   \r\n          break;\r\n          case 'quote' :\r\n          var c2=data[i].content.split(one_lvl)\r\n          var text2 = c2[0]\r\n          var caption = c2[1]\r\n          var alignment = c2[2] \r\n          ready_made_content.push( { \"id\": data[i].id, \"type\": \"quote\", \"data\": { \"text\": text2, \"caption\": caption, \"alignment\": alignment } } )    \r\n          break;\r\n          case 'code' :\r\n          ready_made_content.push( { \"id\": data[i].id, \"type\": \"code\", \"data\": { \"code\": data[i].content } } )\r\n          break;\r\n          case 'delimiter':\r\n          ready_made_content.push(  { \"id\": data[i].id, \"type\": \"delimiter\", \"data\": {} })\r\n          break;\r\n          case 'raw':\r\n          ready_made_content.push( { \"id\": data[i].id, \"type\": \"raw\", \"data\": { \"html\": data[i].content } } )\r\n          break;\r\n          case 'table':   \r\n          var c3 = data[i].content.split(one_lvl) \r\n          var line = c3[1].split(two_lvl)\r\n          for (let y = 0; y<=line.length-1; y++){\r\n            line[y]=line[y].split(split_text)\r\n          }\r\n          ready_made_content.push( { \"id\": data[i].id, \"type\": \"table\", \"data\": { \"withHeadings\": c3[0], \"content\": line } } )\r\n          break;\r\n          case 'warning':\r\n            var c4 = data[i].content.split(one_lvl)\r\n          ready_made_content.push( { \"id\": data[i].id, \"type\": \"warning\", \"data\": { \"title\": c4[0], \"message\": c4[1] } } )\r\n          break;\r\n          case 'checklist':     \r\n            var c5 = data[i].content.split(one_lvl)\r\n            var lins = []\r\n            for (let k = 0; k<=c5.length-1; k++){\r\n              let c5_l = c5[k].split(split_text)\r\n              lins.push({\"text\":c5_l[0], \"checked\": c5_l[1]})\r\n  \r\n            }\r\n          ready_made_content.push( { \"id\": data[i].id, \"type\": \"checklist\", \"data\": { \"items\": lins } })\r\n          break;\r\n      } \r\n      }\r\n      editor.blocks.render({\"time\" : 1550476186479,\r\n      \"blocks\" : ready_made_content,\r\n      \"version\" : \"2.8.1\"})\r\n  }\r\n    return{priv, teams, article, editor, sect}\r\n  },\r\n  created(){\r\n  setTimeout(()=>{this.info_article()}, 500) \r\n  },\r\n  data(){\r\n    return{\r\n    article_data: [],\r\n    editor_obj: {},\r\n    chain: false\r\n    }\r\n  },\r\n  methods:{\r\n    async publish_art(){\r\n      const url = new URL(\r\n    \"https://api.wiki.itl.systems/team/article/publish\"\r\n);\r\n\r\nconst headers = {\r\n    \"Authorization\": \"Bearer \"+this.priv.token,\r\n    \"Content-Type\": \"application/json\",\r\n    \"Accept\": \"application/json\",\r\n};\r\n\r\nlet body = {\r\n    \"team_id\": this.teams.session_TeamID,\r\n    \"article_id\": this.article.article_id\r\n};\r\n\r\nuseFetch(url, {\r\n    method: \"POST\",\r\n    headers,\r\n    body: JSON.stringify(body),\r\n}).then(()=>{\r\n// window.location.href='/'+this.teams.session_TeamID+'.itl.wiki/section/'+this.sect.current_section+'/items/'+this.article.article_id\r\n})\r\n\r\n    },\r\n    async edit_role(type, userID){\r\n      const url = new URL(\r\n      \"https://api.wiki.itl.systems/team/abilities/edit\"\r\n  );\r\n  \r\n  const headers = {\r\n      \"Authorization\": \"Bearer \"+this.priv.token,\r\n      \"Content-Type\": \"application/json\",\r\n      \"Accept\": \"application/json\",\r\n  };\r\n  \r\n  let body = {\r\n      \"team_id\": this.teams.session_TeamID,\r\n      \"entity_type\": 'article',\r\n      \"entity_id\": this.article.article_id,\r\n      \"permission\": type\r\n  };\r\n  if (typeof(userID)==='object'){\r\n    for (let a =0; a<=userID.length-1; a++){\r\n      body.user_id=userID[a].id\r\n      useFetch(url, {\r\n      method: \"POST\",\r\n      headers,\r\n      body: JSON.stringify(body),\r\n  })\r\n    }\r\n  }else{\r\n    body.user_id=userID\r\n  useFetch(url, {\r\n      method: \"POST\",\r\n     headers,\r\n     body: JSON.stringify(body),\r\n   })\r\n  }\r\n  \r\n    },\r\n    save(){\r\n    this.editor.save().then((data)=>{\r\n     this.editor_obj.blocks=data.blocks\r\n    })\r\n    },\r\n    async info_article() {\r\n      const url = new URL(\r\n      \"https://api.wiki.itl.systems/team/article/edit\"\r\n  );\r\n  const url2 = new URL(\r\n      \"https://api.wiki.itl.systems/team/article\"\r\n  );\r\n  const params = {\r\n    \"team_id\" : this.teams.session_TeamID,\r\n    \"article_id\": this.article.article_id\r\n  }\r\n  Object.keys(params)\r\n      .forEach(key => {url.searchParams.append(key, params[key]); \r\n                       url2.searchParams.append(key, params[key])});\r\n  const headers = {\r\n      \"Authorization\": \"Bearer \"+this.priv.token,\r\n      \"Content-Type\": \"application/json\",\r\n      \"Accept\": \"application/json\",\r\n  };\r\n  \r\n  const {data: data1} = await useFetch(url, {\r\n      method: \"GET\",\r\n      headers,\r\n  })\r\n  const {data: data2} = await useFetch(url2, {\r\n      method: \"GET\",\r\n      headers,\r\n  })\r\n  this.article_data={info_edit: data1.value.data, info_public: data2.value.data}\r\n    },\r\n    import_data(date){\r\n        var month = ['января','февраля','марта','апреля','мая','июня','июля','августа','сентября','октября','ноября','декабря']\r\n        let dateXXX= new Date(date)\r\n         var dateXXX_text= dateXXX.getDate()+' '+month[dateXXX.getMonth()]+\" \"+\r\n        dateXXX.toTimeString().slice(0, 5)\r\n                                   \r\n        return (dateXXX_text)\r\n  \r\n    }\r\n  }\r\n  }\r\n  </script>\r\n  <style lang=\"scss\" scored>\r\n  @import \"@/assets/scss/font_family.scss\";\r\n  #editorjsc{\r\n    font-family: 'Roboto_regular';\r\n    font-size: 14px;\r\n    position: relative;\r\n    width: 900px;\r\n    left: 390px;\r\n    top: 100px;\r\n    .cdx-block{\r\n    position: relative;\r\n    left: -70px;\r\n  }\r\n  }\r\n  .plio{\r\n    cursor: pointer;\r\n    position: relative;\r\n    left: 1000px;\r\n    top: 14px;\r\n    display: flex;\r\n    align-content: center;\r\n    span{\r\n      font-family: 'Roboto_regular';\r\n      font-size: 14px;\r\n      line-height: 1.5\r\n    }\r\n    img{\r\n      margin-right: 10px;\r\n      width: 20px;\r\n      height: 20px;\r\n    }\r\n  }\r\n  .hillplis{\r\n  position: relative;\r\n  left: 420px;\r\n  top: 20px;\r\n  font-size: 13px;\r\n  max-width: 400px;\r\n  color: gray;\r\n  font-family: 'Roboto_regular';\r\n  cursor: pointer;\r\n  &:hover{\r\n    text-decoration: underline;\r\n  }\r\n  }\r\n  .inside{\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  left: 410px;\r\n  top: 230px;\r\n  margin: 0px;\r\n  padding: 0px;\r\n  width: 880px;\r\n  font-family: 'Roboto_regular';\r\n  .items_block{\r\n    display: flex;\r\n    margin: 0px;\r\n    padding: 7px;\r\n    padding-bottom: 10px;\r\n    padding-top: 5px; \r\n    padding-left: 10px;\r\n    width: 100%;\r\n    height: 37px;\r\n    &:hover{\r\n      background-color: rgb(241, 246, 250);\r\n    }\r\n    img.file{\r\n      margin-top: 4px;\r\n      margin-left: 4px;\r\n      margin-right: 30px;\r\n    }\r\n    img.fold{\r\n      margin-right: 20px;\r\n      width: 38px;\r\n      height: 38px;\r\n    }\r\n    .no{\r\n      padding-top: 7px;\r\n      .nm{\r\n        font-size: 15px;\r\n        color: blue;\r\n        cursor: pointer;\r\n      }\r\n      .ob{\r\n        display: flex;\r\n        flex-wrap: nowrap;\r\n        font-size: 13px;\r\n        color: gray;\r\n  \r\n        span{\r\n          color: rgb(77, 77, 77);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  }\r\n  .meaning{\r\n  color:rgb(65, 65, 65);\r\n  }\r\n  .difstack{\r\n    display: flex;\r\n  position: relative;\r\n  left: 420px;\r\n  top: 60px;\r\n  max-width: 400px;\r\n  font-size: 23px;\r\n  font-family: 'Roboto_regular';\r\n  }\r\n  .postDes{\r\n  display: flex;\r\n  }\r\n  .spt{\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  position: relative;\r\n  left: 420px;\r\n  top: 70px;\r\n  max-width: 400px;\r\n  font-size: 13px;\r\n  color: gray;\r\n  font-family: 'Roboto_regular';\r\n  }\r\n  .chain{\r\n  &:hover{\r\n    background-color: aliceblue;\r\n  }\r\n  cursor: pointer;\r\n  border-radius: 2px;\r\n  position: relative;\r\n  left: 1285px;\r\n  top: 35px;\r\n  width: 35px;\r\n  height: 35px;\r\n  img{\r\n    margin-left: 8px;\r\n    margin-top: 8px;\r\n  }\r\n  }\r\n  .kiut{\r\n  display: flex;\r\n  font-family: 'Roboto_regular';\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n  border-radius: 2px;\r\n  position: relative;\r\n  width: 80px;\r\n  height: 30px;\r\n  left: 1140px;\r\n  line-height: 2;\r\n  top: 40px;\r\n  img{\r\n    position: relative;\r\n    width: 20px;\r\n    left: -10px;\r\n    top: -5px;\r\n  height: 20px;\r\n  margin-left: 8px;\r\n    margin-top: 8px;\r\n  }\r\n  }\r\n  .section_content{\r\n  position: relative;\r\n  width: 900px;\r\n  top: 200px;\r\n  left: 413px;\r\n  font-family: 'Roboto_regular';\r\n  pointer-events: none;\r\n  p{\r\n    word-break: break-all;\r\n  }\r\n  }\r\n  .lkj{\r\n      position: relative;\r\n      left: 15px;\r\n      text-align: center;\r\n      line-height: 1.8;\r\n      font-family: 'Roboto_regular';\r\n      padding: 4px;\r\n      color: rgb(48, 48, 48);\r\n      font-size: 12px;\r\n      padding-left: 7px;\r\n      padding-right: 7px;\r\n      padding-bottom: 2px;\r\n      max-width: 100px;\r\n      margin: 0px;\r\n      background-color: aliceblue;\r\n    }\r\n  </style>"],"names":["_imports_1","ImageTool","Delimiter","Checklist","url","teams","article","params","priv","useFetch","headers","one_lvl","two_lvl","i","data","ready_made_content","c","text","lvl","c1","items","split_text","style","c2","caption","alignment","c3","y","line","c4","c5","lins","k","c5_l","editor","sect","body","type","a","userID","url2","key","data1","data2","date","dateXXX_text","dateXXX","month","_hoisted_4","_createElementVNode","_hoisted_6","_hoisted_7","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","$data","$options","_cache","$event","_createTextVNode","_toDisplayString","_withDirectives","_vShow"],"mappings":"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"}