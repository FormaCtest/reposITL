{"version":3,"file":"index.6d3d39c0.js","sources":["../../../../pages/[name].itl.wiki/my_works/index.vue"],"sourcesContent":["<template>\r\n    <div>\r\n       <div v-if=\"good\" class=\"no_work\">\r\n        <span >Мои работы</span>\r\n        <p v-if=\"!list_items\">Похоже, вы еще не создали ни одной записи</p>\r\n        <div v-if=\"list_items\" class=\"items_block\" v-for=\"list of list_items\">  \r\n            <img class=\"file\" src=\"@/assets/resourses/icons/fold_full.png\">\r\n            <div class=\"no\"> \r\n              <div class=\"nm\">\r\n                <div @click=\"article.use_article(list.name, list.id); navigateTo('/'+this.teams.session_TeamCode+'.itl.wiki/my_works/'+list.id)\" class=\"ik\">\r\n                  {{ list.name }}\r\n                </div>\r\n              <div v-if=\"list.status_id<3\" class=\"status\">\r\n                {{ list.status_id===1?'черновик':'на модерации' }}\r\n            </div>\r\n            </div>\r\n            <div class=\"ob\">\r\n              Добавлено:&nbsp;<span>{{ edit_date(list.created_at)  }}</span>\r\n            </div>\r\n            <div @click=\"article.use_article(list.name, list.id); navigateTo('/'+teams.session_TeamCode+'.itl.wiki/my_works/'+list.id+'/edit')\" class=\"edits\">\r\n              <img src=\"@/assets/resourses/icons/pencil.png\">\r\n            Правка\r\n            </div>\r\n            <div class=\"setur\">\r\n              <ChangingAccess :type_entity=\"'article'\" :id_entity=\"list.id\" @For_whom=\"edit_pr\" :left=\"700\" :top=\"8\" text=\"У всех\" />\r\n            </div>\r\n            </div>\r\n          </div>\r\n       </div> \r\n    </div>\r\n</template>\r\n<script>\r\nimport { useThePrivateStore } from '~~/stores/private';\r\nimport { useTeamsStore } from '~~/stores/Teams';\r\nimport { useArticleStore } from '~~/stores/ArticleStore';\r\nimport { useSectionStore } from '~~/stores/SectionStore';\r\nimport { useDataUserStore } from '~~/stores/UserData';\r\ndefinePageMeta ({\r\n  layout: \"company\",\r\n  middleware: ['auth', 'team'],\r\n})\r\nexport default{\r\n    setup(){\r\n        const teams = useTeamsStore();\r\n        const sect = useSectionStore();\r\n        const article = useArticleStore();\r\n        const priv = useThePrivateStore();\r\n        const users = useDataUserStore()\r\n        return {teams, sect, article, priv, users}\r\n    },\r\n    data(){\r\n        return{\r\n            list_items: [],\r\n            mass_sec: false,\r\n            good: false\r\n        }\r\n    },\r\n    created(){\r\n        \r\n        setTimeout(()=>{this.users.TakingData()}, 500) \r\n        setTimeout(()=>{this.info_items()}, 1000) \r\n\r\n    },\r\n    methods:{\r\n\r\n      async edit_pr(type_action, userID, type_entity, id_entity){\r\n        const url = new URL(\r\n    \"https://api.wiki.itl.systems/team/abilities/edit\"\r\n);\r\n\r\nconst headers = {\r\n    \"Authorization\": \"Bearer \"+this.priv.token,\r\n    \"Content-Type\": \"application/json\",\r\n    \"Accept\": \"application/json\",\r\n};\r\n\r\nlet body = {\r\n    \"team_id\": this.teams.session_TeamID,\r\n    \"entity_type\":  type_entity,\r\n    \"entity_id\": id_entity,\r\n    \"permission\": type_action\r\n};\r\nif (typeof(userID)==='object'){\r\n  for (var a = 0; a<=userID.length-1; a++){\r\n    body.user_id=userID[a].id;\r\n    useFetch(url, {\r\n    method: \"POST\",\r\n    headers,\r\n    body: JSON.stringify(body),\r\n})\r\n  }\r\n}else{\r\n  body.user_id=userID\r\n  useFetch(url, {\r\n    method: \"POST\",\r\n    headers,\r\n    body: JSON.stringify(body),\r\n})\r\n}\r\n\r\n      },\r\n        async info_items(){\r\n          const url = new URL(\r\n    \"https://api.wiki.itl.systems/team/section/sections\"\r\n);\r\n\r\nconst params = {\r\n    \"team_id\": this.teams.session_TeamID,\r\n};\r\nObject.keys(params)\r\n    .forEach(key => url.searchParams.append(key, params[key]));\r\n\r\nconst headers = {\r\n    \"Authorization\": \"Bearer \"+this.priv.token,\r\n    \"Content-Type\": \"application/json\",\r\n    \"Accept\": \"application/json\",\r\n};\r\n\r\n\r\nconst {data}= await useFetch(url, {\r\n    method: \"GET\",\r\n    headers,\r\n})\r\nvar prob_mass=[]\r\nfor (var a = 0; a<=data.value.data.length-1; a++){\r\nprob_mass.push(data.value.data[a].items)\r\n}\r\nprob_mass = prob_mass.flat()\r\nfor (var t = 0; t<=prob_mass.length-1; t++){\r\n  if (prob_mass[t].created_by===this.users.userId) {\r\n    this.list_items.push(prob_mass[t])\r\n  }\r\n}\r\nthis.good=true\r\n\r\n\r\n\r\n        },\r\n        edit_date(date){\r\n            var month = ['января','февраля','марта','апреля','мая','июня','июля','августа','сентября','октября','ноября','декабря']\r\n      let dateXXX= new Date(date)\r\n       var dateXXX_text= dateXXX.getDate()+' '+month[dateXXX.getMonth()]+\" \"+\r\n      dateXXX.toTimeString().slice(0, 5)\r\n                                 \r\n      return (dateXXX_text)\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style lang=\"scss\" scored>\r\n@import \"assets/scss/font_family.scss\";\r\n.no_work{\r\n    position: absolute;\r\n    left: 430px;\r\n    top: 45px;\r\n    font-family: 'Roboto_regular';\r\n    p{\r\n        font-size: 15px;\r\n        line-height: 2;\r\n    }\r\n}\r\n\r\n.items_block{\r\n    position: relative;\r\n    display: flex;\r\n    margin: 0px;\r\n    padding: 7px;\r\n    padding-bottom: 10px;\r\n    padding-top: 5px; \r\n    padding-left: 10px;\r\n    width: 100%;\r\n    height: 37px;\r\n    left: -13px;\r\n    top: 20px;\r\n    &:hover{\r\n      background-color: rgb(241, 246, 250);\r\n    }\r\n    img.file{\r\n      margin-top: 4px;\r\n      margin-left: 4px;\r\n      margin-right: 30px;\r\n    }\r\n    img.fold{\r\n      margin-right: 20px;\r\n      width: 38px;\r\n      height: 38px;\r\n    }\r\n    .ik{\r\n      min-width: 150px;\r\n    }\r\n    .no{\r\n      width: 800px;\r\n      padding-top: 7px;\r\n      &:not(:hover){\r\n        .setur{\r\n          opacity: 0;\r\n        }\r\n        .edits{\r\n          opacity: 0;\r\n        }\r\n      }\r\n      .nm{\r\n        position: relative;\r\n        display: flex;\r\n        flex-wrap: nowrap;\r\n        font-size: 15px;\r\n        height: 20px;;\r\n        color: blue;\r\n        cursor: pointer;\r\n        max-width: 500px;\r\n      }\r\n      .ob{\r\n        display: flex;\r\n        flex-wrap: nowrap;\r\n        font-size: 11px;\r\n        color: gray;\r\n\r\n        span{\r\n          color: rgb(77, 77, 77);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .status{\r\n    position: relative;\r\n    left: 15px;\r\n    top: 0px;\r\n    text-align: center;\r\n    font-family: 'Roboto_regular';\r\n    color: rgb(48, 48, 48);\r\n    font-size: 12px;\r\n    padding-left: 7px;\r\n    padding-right: 7px;\r\n    height: 20px;\r\n    background-color: aliceblue;\r\n  }\r\n  .edits{\r\n   \r\n    position: relative;\r\n   display: flex;\r\n   flex-wrap: nowrap;\r\n   font-size: 14px;\r\n   font-family: 'Roboto_regular';\r\n   color: rgb(71, 71, 71);\r\n   left: 570px;\r\n   top: -27px;\r\n   cursor: pointer;\r\n   max-width: 80px;\r\n   img{\r\n    position: relative;\r\n    left: -10px;\r\n    width: 20px;\r\n   }\r\n  }\r\n \r\n</style>"],"names":["_sfc_main","article","useArticleStore","priv","useThePrivateStore","teams","sect","users","url","headers","body","id_entity","userID","a","params","data","useFetch","prob_mass","t","date","dateXXX_text","dateXXX","month","_hoisted_2","_createElementVNode","_hoisted_4","_imports_0","_hoisted_6","_hoisted_7","_hoisted_10","_hoisted_13","_openBlock","_createElementBlock","_hoisted_1","_hoisted_3","_toDisplayString","list","_hoisted_8","_hoisted_9","$options"],"mappings":"ynBAyCA,MAAAA,EAAA,CACI,OAAA,mBAGIC,EAAAC,IACAC,EAAAC,UAEA,MAAA,CAAA,MAAAC,EAAA,KAAAC,EAAA,QAAAL,EAAA,KAAAE,EAAA,MAAAI,CAAA,GAEJ,MAAA,CACI,MAAA,eAEI,SAAA,GACA,KAAA,EACJ,GAEJ,SAAA,CAEI,WAAA,IAAA,CAAA,KAAA,MAAA,WAAA,CAAA,EAAA,GAAA,EACA,WAAA,IAAA,CAAA,KAAA,WAAA,CAAA,EAAA,GAAA,GAGJ,QAAA,wBAGI,MAAAC,EAAA,IAAA,sDAER,EAEAC,EAAA,CACI,cAAA,UAAA,KAAA,KAAA,MACA,eAAA,4CAEJ,EAEA,IAAAC,EAAA,CACI,QAAA,KAAA,MAAA,6BAEA,UAAAC,cAEJ,EACA,GAAA,OAAAC,GAAA,SACE,QAAAC,EAAA,EAAAA,GAAAD,EAAA,OAAA,EAAAC,yCAIE,QAAAJ,wBAEJ,EAAA,aAAA,OAGEC,EAAA,QAAAE,qBAGE,QAAAH,wBAEJ,EAAA,aAAA,GAIQ,MAAA,YAAA,CACE,MAAAD,EAAA,IAAA,wDAEV,EAEAM,EAAA,CACI,QAAA,KAAA,MAAA,cACJ,EACA,OAAA,KAAAA,CAAA,4CAGA,MAAAL,EAAA,CACI,cAAA,UAAA,KAAA,KAAA,MACA,eAAA,4CAEJ,EAGA,CAAA,KAAAM,CAAA,EAAA,MAAAC,EAAAR,EAAA,cAEI,QAAAC,CACJ,EAAA,aAAA,EAEA,QADAQ,EAAA,CAAA,EACAJ,EAAA,EAAAA,GAAAE,EAAA,MAAA,KAAA,OAAA,EAAAF,IACAI,EAAA,KAAAF,EAAA,MAAA,KAAAF,GAAA,KAAA,EAEAI,EAAAA,EAAA,KAAA,EACA,QAAAC,EAAA,EAAAA,GAAAD,EAAA,OAAA,EAAAC,yCAEI,KAAA,WAAA,KAAAD,EAAAC,EAAA,EAGJ,KAAA,KAAA,IAKQ,UAAAC,EAAA,meAGD,IAAAC,EAAAC,EAAA,UAAA,IAAAC,EAAAD,EAAA,SAAA,GAAA,IACDA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,EAEA,OAAAD,CACE,CACJ,CACJ,WAjJwB,MAAA,WAChBG,EAAAC,EAAA,OAAA,KAAA,0DAAA,EAAA,YAEuBC,EAAA,CAAA,MAAA,aAAA,aACd,MAAA,OAAa,IAAAC,YACbC,EAAA,CAAA,MAAA,IAAA,EACEC,EAAA,CAAA,MAAA,IAAA,yBAIwB,MAAA,UAI1BC,EAAA,CAAA,MAAA,IAAA,2CAOAC,EAAA,CAAA,MAAA,OAAA,qEArBVC,IAAAC,EAAA,MAAAC,EAAA,0BAECF,EAAA,EAAAC,EAAA,IAAAE,EAAA,gNAAA,sDACAH,EAAA,EAAAC,EAAA,MAAAP,EAAA,GAEID,EAAA,MAAAG,EAAA,CACEH,EAAA,MAAAI,EAAA,2HACmI,MAAA,IAC5H,EAAAO,EAAAC,EAAA,IAAA,EAAA,EAAAC,CAAA,EAEID,EAAA,UAAA,GAAXL,IAAAC,EAAA,MAAAM,EAAAH,EAAAC,EAAA,YAAA,EAAA,mDAAA,qEAAA,EAAA,CAAA,cAIFZ,EAAA,MAAAK,EAAA,mEACkBL,EAAA,OAAA,KAAAW,EAAAI,EAAA,UAAAH,EAAA,UAAA,CAAA,EAAA,CAAA,mIAEkH,MAAA,8DAIpIZ,EAAA,MAAAM,EAAA,MACmB,YAAA,yBAA8C,WAAAS,EAAA,QAAoB,KAAA,IAAY,IAAA,EAAQ,KAAA"}